[
  {
    "title": "Going Viral: Pandemic-Related Mobility Metrics",
    "img": "goingviral.png",
    "alt": "Going Viral homepage screenshot",
    "live": "https://goingviral.netlify.app",
    "github": "https://github.com/orgs/Going-Viral/dashboard",
    "description": "Going Viral creates dynamic, interactive data visualizations to compare COVID-19 statistics to global changes in people's travel habits. In a one-week sprint, my team built an API with Node, Express, and MongoDB, and used D3, React, and Redux for the front end. I worked primarily on the API, unit testing, and Redux state management."
  },
  {
    "title": "Social Distance-Ping",
    "img": "ping.png",
    "alt": "Social Distance-Ping logo",
    "live": "https://github.com/Alchemy-Covid-19",
    "github": "https://github.com/Alchemy-Covid-19",
    "description": "Social Distance-Ping scrapes global COVID-19 data from reputable sources every hour, and allows users to request current location-specific data texted to their phones on-demand or as a daily digest. Ping was built in Node.js using Express, MongoDB, and Heroku, leveraging web scraping with a headless browser, scheduled scripts, and Twilio."
  },
  {
    "title": "Sew Organized",
    "img": "seworganized.png",
    "alt": "Sew Organized homepage screenshot",
    "live": "https://sew-organized.herokuapp.com/",
    "github": "https://github.com/orgs/Sew-Organized/dashboard",
    "description": "Sew Organized was designed to help crafters keep track of their supplies. Data was scraped from a CSV file and a third-party API. React.js front end, Node.js/Express back end, PostgreSQL database. Much of the app was mob-programmed, but I solo-coded the detail page and modified our color palette generating algorithm to find closest color matches."
  },
  {
    "title": "DisasterProof",
    "img": "disasterproof.png",
    "alt": "DisasterProof shield logo",
    "live": "https://disasterproof.me",
    "github": "https://github.com/Safety-Dance/disaster-prep-app",
    "description": "I conceived of DisasterProof as a way to make home disaster preparation less overwhelming. My team helped make this vision a reality in a one-week sprint using vanilla JavaScript."
  }
]