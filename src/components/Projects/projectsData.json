[
  {
    "title": "Safe Place for Youth",
    "img": "safeplace.jpeg",
    "alt": "Smartphone displaying Safe Place homescreen with a list of nearby locations",
    "github": "https://github.com/orgs/safe-place-for-youth/dashboard",
    "description": "This mobile app won the 2020 Tech Association of Oregon hackathon. Our team of three designed and prototyped the React Native app to connect youth experiencing houselessness with nearby safe places they can go. My primary contributions were implementing an AirTable no-code database to make data maintenance easier for the nonprofit client, using geolocation data to find and sort places based on the user's location, and extracting reusable React hooks to make our codebase more modular."
  },
  {
    "title": "Going Viral: Pandemic-Related Mobility Metrics",
    "img": "goingviral.png",
    "alt": "Going Viral homepage screenshot",
    "live": "https://goingviral.netlify.app",
    "github": "https://github.com/orgs/Going-Viral/",
    "description": "Going Viral creates dynamic, interactive data visualizations to compare COVID-19 statistics to global changes in people's travel habits. In a one-week sprint, my team built an API with Node, Express, and MongoDB, and used D3, React, and Redux for the front end. I worked primarily on the API, unit testing, and Redux state management."
  },
  {
    "title": "Social Distance-Ping",
    "img": "ping.png",
    "alt": "Social Distance-Ping logo",
    "github": "https://github.com/Alchemy-Covid-19",
    "description": "Social Distance-Ping scrapes global COVID-19 data from reputable sources every hour, and allows users to request current location-specific data texted to their phones on-demand or as a daily digest. Ping was built in Node.js using Express, MongoDB, and Heroku, leveraging web scraping with a headless browser, scheduled scripts, and Twilio."
  },
  {
    "title": "Sew Organized",
    "img": "seworganized.png",
    "alt": "Sew Organized homepage screenshot",
    "live": "https://sew-organized.herokuapp.com/",
    "github": "https://github.com/orgs/Sew-Organized/",
    "description": "Sew Organized was designed to help crafters keep track of their supplies. Data was scraped from a CSV file and a third-party API. React.js front end, Node.js/Express back end, PostgreSQL database. Much of the app was mob-programmed, but I solo-coded the detail page and modified our color palette generating algorithm to find closest color matches."
  },
  {
    "title": "COVID-19 Aid Funds",
    "img": "covidaid.png",
    "alt": "Screenshot of COVID aid fund listings page",
    "live": "http://covid19aidfunds.org/",
    "github": "https://github.com/covid-19-relief",
    "description": "A week into Oregon's stay-at-home order, I realized there were many resources to facilitate donations to those hardest-hit by the pandemic, but no centralized place to access those resources. I recruited a team of six volunteers, and we sprinted to create this React/Node/postgreSQL app in three days."
  },
  {
    "title": "DisasterProof",
    "img": "disasterproof.png",
    "alt": "DisasterProof shield logo",
    "live": "http://disasterproof.me/",
    "github": "https://github.com/Safety-Dance/disaster-prep-app",
    "description": "DisasterProof makes home disaster preparation less overwhelming, by breaking tasks down into approachable categories and helping users create a custom preparation list. Built in a four-day sprint using vanilla JavaScript and local storage."
  }
]
